/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package segitems;

import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Alejandro
 */
public class CambioEstadoDialog extends javax.swing.JDialog {

    /**
     * Creates new form CambioEstadoDialog
     */
    public CambioEstadoDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public CambioEstadoDialog(java.awt.Frame parent, boolean modal, Item item) {
        super(parent, modal);
        initComponents();
        this.item = item;
        
        DefaultListModel<String> lmResponsables = new DefaultListModel<>();
        for (Miembro miembro : item.getTipoItem().getEquipo().getIntegrantes()){
            lmResponsables.addElement(miembro.getNombre());
        }
        listaResponsables.setModel(lmResponsables);
        listaResponsables.setVisibleRowCount(5);
        listaResponsables.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        listaResponsables.setLayoutOrientation(JList.VERTICAL);
        
        DefaultListModel<String> lmEstadosSiguientes = new DefaultListModel<>();
        for (Estado estado : item.getEstado().getEstadosSiguientes()){
            if(item.getTipoItem().getEstados().contains(estado)){
                lmEstadosSiguientes.addElement(estado.getNombre());
            }
        }
        listaEstadosSiguientes.setModel(lmEstadosSiguientes);
        listaEstadosSiguientes.setVisibleRowCount(5);
        listaEstadosSiguientes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        listaEstadosSiguientes.setLayoutOrientation(JList.VERTICAL);
        listaEstadosSiguientes.addListSelectionListener(
                new ListSelectionListener(){
                    public void valueChanged(ListSelectionEvent event){
                        if(listaEstadosSiguientes.getValueIsAdjusting() == false){
                            if(listaEstadosSiguientes.getSelectedValue() == "Finalizado"){
                                listaResponsables.setEnabled(false);
                            }
                        }
                    }
                }
        );
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaEstadosSiguientes = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaResponsables = new javax.swing.JList<>();
        botonConfirmar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Cambio de Estado de Item");

        jLabel2.setText("Estados Siguientes");

        jLabel3.setText("Posibles Responsables");

        jScrollPane1.setViewportView(listaEstadosSiguientes);

        jScrollPane2.setViewportView(listaResponsables);

        botonConfirmar.setText("Confirmar");
        botonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConfirmarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(botonConfirmar)
                        .addGap(18, 18, 18)
                        .addComponent(botonCancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonConfirmar)
                    .addComponent(botonCancelar))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConfirmarActionPerformed
        if(!listaEstadosSiguientes.isSelectionEmpty() && !listaResponsables.isSelectionEmpty()){
            if(listaEstadosSiguientes.getValueIsAdjusting() == false && listaResponsables.getValueIsAdjusting() == false){
                Estado estadoSiguiente = Estado.buscarEstado(listaEstadosSiguientes.getSelectedValue());
                Miembro responsableSiguiente = Miembro.buscarMiembroPorNombre(listaResponsables.getSelectedValue());
                
                item.addSecuencia();
                if(item.getUsuario().getAvisos().contains(item.getNombre()) == false){
                    item.getUsuario().addAviso(item.getNombre());               //SOLO AGREGA AVISO SI NO HABIAN YA AVISOS DE ESE ITEM
                }
                
                if(item.getResponsable() != responsableSiguiente){
                    item.getResponsable().eliminarResponsabilidadItem(item);
                    responsableSiguiente.addResponsabilidadItem(item);
                    item.setResponsable(responsableSiguiente);
                }
                item.setEstado(estadoSiguiente);
                JOptionPane.showMessageDialog(this, 
                                               "¡Item cambió de Estado con éxito!",
                                               "Operación exitosa",
                                               JOptionPane.PLAIN_MESSAGE);  
                
                setVisible(false);
                dispose();
            }   
        }
        else if(listaResponsables.isEnabled() == false){
            if(listaEstadosSiguientes.getValueIsAdjusting() == false){
                Estado estadoSiguiente = Estado.buscarEstado("Finalizado");
                
                item.addSecuencia();
                if(item.getUsuario().getAvisos().contains(item.getNombre()) == false){
                    item.getUsuario().addAviso(item.getNombre());               //SOLO AGREGA AVISO SI NO HABIAN YA AVISOS DE ESE ITEM
                }
                item.getResponsable().eliminarResponsabilidadItem(item);
                item.setEstado(estadoSiguiente);
                item.setResponsable(null);
                JOptionPane.showMessageDialog(this, 
                                               "¡Item cambió de Estado con éxito!",
                                               "Operación exitosa",
                                               JOptionPane.PLAIN_MESSAGE);  
                
                
                setVisible(false);
                dispose();
            }
        }
        else{
            JOptionPane.showMessageDialog(this, 
                                           "Por favor, seleccione un estado y un responsable para poder continuar.",
                                           "Error",
                                           JOptionPane.WARNING_MESSAGE);             
        }
        
    }//GEN-LAST:event_botonConfirmarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CambioEstadoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CambioEstadoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CambioEstadoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CambioEstadoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CambioEstadoDialog dialog = new CambioEstadoDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private Item item;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonConfirmar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaEstadosSiguientes;
    private javax.swing.JList<String> listaResponsables;
    // End of variables declaration//GEN-END:variables
}
